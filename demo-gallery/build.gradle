apply plugin: project.IS_ANDROID ? project.PLUGIN_ANDROID_APP: project.PLUGIN_JAVA_APP

if (plugins.hasPlugin(project.PLUGIN_ANDROID_APP)) {
    android {

        defaultConfig {
            namespace "io.crossbar.autobahn.demogallery"
            compileSdk 34
            minSdkVersion 26
            targetSdkVersion 34
            multiDexEnabled true
        }
        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        sourceSets {
            main {
                java {
                    include 'io/crossbar/autobahn/demogallery/android/**'
                    include 'io/crossbar/autobahn/demogallery/ExampleClient.java'
                    exclude 'io/crossbar/autobahn/demogallery/netty/**'
                }
            }
        }
        packagingOptions {
            exclude 'META-INF/spring.tooling'
            exclude 'META-INF/spring.handlers'
            exclude 'META-INF/spring.schemas'
            exclude 'META-INF/license.txt'
            exclude 'META-INF/notice.txt'
            exclude 'META-INF/INDEX.list'
        }
    }

    dependencies {
        implementation project(path: ':autobahn')
        implementation 'androidx.appcompat:appcompat:1.6.1'
        implementation 'com.android.support:multidex:1.0.3'
        implementation "androidx.constraintlayout:constraintlayout:2.1.4"
        implementation "com.google.android.material:material:1.11.0"

        implementation 'com.basgeekball:awesome-validation:4.2'
        implementation 'org.web3j:crypto:4.8.8-android'
        implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
    }
} else if (project.IS_NEXT) {
    // Nothing useful is produced here, however this avoids
    // build failure, until we come with a better solution.
    mainClassName = 'dummy'
    sourceSets {
        main {
            java {
                exclude 'io/crossbar/autobahn/demogallery'
            }
        }
    }
} else {
    mainClassName = 'io.crossbar.autobahn.demogallery.netty.Main'
    dependencies {
        implementation project(path: ':autobahn')
    }
    sourceSets {
        main {
            java {
                include 'io/crossbar/autobahn/demogallery/netty/**'
                include 'io/crossbar/autobahn/demogallery/ExampleClient.java'
                include 'io/crossbar/autobahn/demogallery/data/**'
                exclude 'io/crossbar/autobahn/demogallery/android/**'
            }
        }
    }
    jar {
        version = project.properties.get("buildVersion", "")
    }

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}
